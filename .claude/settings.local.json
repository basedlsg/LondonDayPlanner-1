{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run dev:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(rg:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(chmod:*)",
      "Bash(timeout:*)",
      "Bash(sed:*)",
      "Bash(npm run build:*)",
      "Bash(npm run db:push:*)",
      "Bash(node:*)",
      "Bash(npm run:*)",
      "Bash(npm test:*)",
      "Bash(npm install:*)",
      "Bash(mv:*)",
      "Bash(touch:*)",
      "Bash(tsx:*)",
      "Bash(rm:*)",
      "Bash(npx drizzle-kit push:*)",
      "Bash(mkdir:*)",
      "Bash(npx drizzle-kit:*)",
      "Bash(gtimeout:*)",
      "Bash(open test-pdf-fixed.pdf)",
      "Bash(npm uninstall:*)",
      "Bash(open http://localhost:3001/)",
      "Bash(kill:*)",
      "Bash(npx tsc:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(railway login:*)",
      "Bash(./deploy.sh)",
      "Bash(NODE_ENV=production PORT=8080 timeout 10s node dist/server/index.js)",
      "WebFetch(domain:londondayplanner-1.railway.internal)",
      "WebFetch(domain:londondayplanner-1-production.railway.app)",
      "Bash(cp:*)",
      "Bash(npx cap init:*)",
      "Bash(npx cap add:*)",
      "Bash(npx cap:*)",
      "Bash(ln:*)",
      "Bash(git rm:*)",
      "Bash(npx netlify-cli deploy:*)",
      "Bash(npx netlify-cli sites:create:*)",
      "Bash(tar:*)",
      "Bash(netlify login:*)",
      "Bash(netlify sites:create:*)",
      "Bash(netlify deploy:*)",
      "Bash(CTRL+C)",
      "Bash(netlify link:*)",
      "Bash(NETLIFY_BUILD_COMMAND=\"\" netlify deploy --prod --dir .)",
      "Bash(netlify api deployFile:*)",
      "Bash(zip:*)",
      "Bash(netlify api createSiteDeploy:*)",
      "WebFetch(domain:docs.netlify.com)",
      "Bash(vercel:*)",
      "Bash(vercel login:*)",
      "Bash(dig:*)",
      "Bash(nslookup:*)",
      "WebFetch(domain:docs.railway.app)",
      "mcp__zen__analyze",
      "mcp__zen__thinkdeep",
      "Bash(./test_noon_api.sh:*)",
      "mcp__zen__precommit",
      "Bash(git pull:*)",
      "Bash(npx neonctl:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_qrvAMB0IRVa6@ep-lucky-mouse-a8ezvazt.eastus2.azure.neon.tech/neondb?sslmode=require\" node -e \"\nconst { neon } = require(''@neondatabase/serverless'');\nconst sql = neon(process.env.DATABASE_URL);\n\nasync function testConnection() {\n  try {\n    console.log(''üîç Testing new Neon database connection for deployment...'');\n    const result = await sql\\`SELECT current_database(), version(), now() as timestamp\\`;\n    console.log(''‚úÖ Production database connection successful!'');\n    console.log(''Database:'', result[0].current_database);\n    console.log(''PostgreSQL Version:'', result[0].version.split('' '')[0]);\n    console.log(''Timestamp:'', result[0].timestamp);\n    console.log('''');\n    console.log(''üöÄ Ready for deployment to Railway/Vercel!'');\n  } catch (error) {\n    console.error(''‚ùå Production database connection failed:'', error.message);\n    console.log(''‚ö†Ô∏è  Check Neon database status before deploying.'');\n  }\n}\n\ntestConnection();\n\")"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}